{"version":3,"sources":["avatar.png","components/dashboard.component.js","constant.js","components/strategy/strategy-list.component.js","library/trader-uploader/trader-uploader.component.js","components/strategy/strategy-add.component.js","components/breadcrumbs.component.js","components/strategy/strategy.component.js","library/trader-datepicker/trader-datepicker.component.js","components/stocklist/stockslist.component.js","components/stocklist/stocksupload.component.js","components/stocklist/stocks.component.js","components/backtest.component.js","library/trader-textfield/trader-textfield.component.js","components/runner/test-runner.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dashboard","className","Component","baseAPI","StratList","props","onClick","console","log","key","item","strategy_name","data","strategy_buy","strategy_sell","StrategyList","handleBuyInputChange","e","setState","buyStrategy","target","value","handleSellInputChange","sellStrategy","state","strategyList","error","this","fetchStrategyList","renderStrategyList","axios","get","then","response","catch","map","strat","i","id","mapStrategyToList","TraderUploader","handleFileChange","a","uploadedFiles","files","preProcess","toggleLoading","readMultipleFiles","length","setFileName","name","loading","content","fileName","undefined","inputFileRef","React","createRef","type","ref","onChange","accept","parseType","multiple","openInputFile","label","renderSpinner","actionLabel","onActionTriggered","readFile","convertCsvToJson","csv","lines","split","result","headers","l","obj","line","h","code","trade_date","push","index","fileReader","FileReader","file","onload","bin","val","tempFiles","self","onFileChange","readAsText","current","click","StrategyAdd","strategyName","onBuyFileChange","onSellFileChange","saveStrategy","strategy","post","renderFileNameInput","renderBuySection","renderSellSection","renderActionSection","renderBuyContent","renderSellContent","Button","BreadcrumbItem","children","Breadcrumb","Children","toArray","child","items","to","Strategy","renderRouteArea","path","exact","component","render","callMe","sampleMethod","TraderDatePicker","datePickerOpen","selectedDay","onDayChange","dayPickerProps","showWeekNumbers","todayButton","StocksList","searchStocks","selectedStock","stocks","dateFrom","fromDay","dateTo","toDay","mapStockList","uploadFailed","onFileChangeHandler","stockList","onSaveHandler","uploadSuccessful","handleFromDayChange","day","Date","toISOString","handleToDayChange","handleStockChange","bind","retrieveStocks","aria-hidden","_renderSelectStock","_renderFromDatePicker","_renderToDatePicker","currentStock","moment","format","open","high","low","close","volume","options","selectedOption","LABELS","Object","freeze","RESET","STOCKS","TOTAL_COUNT","UPLOAD","UPLOAD_STOCKS","StocksUpload","clearStockList","toggleSavingState","finally","parseFloat","saving","renderLoadingButton","Stocks","Backtest","_processBacktest","selectedFromDay","selectedToDay","_runBacktest","_setSelectedStrategy","selectedStrategy","selectedStocks","strategies","retrieveStrategyList","_renderSelectStrategy","_renderSearchButton","_renderResetButton","_renderResultsTable","res","bought_date","bought_price","sold_date","sold_price","units","pnl","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","mapResultList","dateRange","from","_saveTransactionHistory","transactionList","TraderTextField","TestRunner","stopLossChange","handleStrategyChange","stopLoss","retrieveStockList","_renderTestPanel","_renderResultPanel","_renderStopLoss","_renderPagination","_renderTestActions","event","count","_i","toFixed","diff","App","renderSideNavigation","renderContentArea","src","require","alt","resetActiveElements","setToActive","document","getElementsByClassName","classList","remove","currentTarget","add","renderTopHeader","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b73d7b16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.a9ce03bb.png\";","import React, { Component } from \"react\";\r\n\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <p>DASHBOARD</p>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n","export const baseAPI = 'http://localhost:4000/';","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseAPI } from \"../../constant\"\r\nimport JSONPretty from 'react-json-pretty';\r\n\r\nconst StratList = props => (\r\n  <tr onClick={() => console.log(`${props.key} is clicked`)}>\r\n    <td> {props.item.strategy_name} </td>\r\n    <td> <JSONPretty data={props.item.strategy_buy} />} </td>\r\n    <td> <JSONPretty data={props.item.strategy_sell} />} </td>\r\n  </tr>\r\n);\r\n\r\nexport default class StrategyList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      strategyList: [],\r\n      error: \"\",\r\n      buyStrategy: \"\",\r\n      sellStrategy: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStrategyList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.renderStrategyList()\r\n    );\r\n  }\r\n\r\n  fetchStrategyList() {\r\n    axios\r\n      .get(`${baseAPI}strategy/`)\r\n      .then(response => {\r\n        this.setState({ strategyList: response.data });\r\n      })\r\n      .catch(error => this.setState({ error: error }));\r\n  }\r\n\r\n  handleBuyInputChange = e => {\r\n    this.setState({ buyStrategy: e.target.value });\r\n  };\r\n\r\n  handleSellInputChange = e => {\r\n    this.setState({ sellStrategy: e.target.value });\r\n  };\r\n\r\n  mapStrategyToList() {\r\n    return this.state.strategyList.map((strat, i) => {\r\n      return <StratList item={strat} key={i} />;\r\n    });\r\n  }\r\n\r\n  renderStrategyList() {\r\n    return (\r\n      <div id=\"strategyList\">\r\n        <div className=\"card\">\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Buy Signal</th>\r\n                  <th>Sell Signal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.mapStrategyToList()}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\n/**\r\n * @class TraderUploader\r\n * @prop {Method} onFileChange method that will process when file is selected.\r\n * @prop {Method} onAction method that will fire when `Upload File` button is clicked.\r\n */\r\nexport default class TraderUploader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: [],\r\n      fileName: undefined,\r\n      loading: false,\r\n    };\r\n\r\n    this.inputFileRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"uploader\">\r\n        <div className=\"stocks-list-uploader\">\r\n          <input\r\n            id=\"uploadFileInput\"\r\n            type=\"file\"\r\n            ref={this.inputFileRef}\r\n            onChange={this.handleFileChange}\r\n            accept={`.${this.props.parseType}`}\r\n            multiple\r\n          />\r\n          <span id=\"fileUploadLabel\" onClick={() => this.openInputFile()}>\r\n            {this.state.fileName || this.props.label}\r\n            {this.state.loading && this.renderSpinner()}\r\n          </span>\r\n          {this.props.actionLabel &&\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              id=\"uploadFileBtn\"\r\n              type=\"button\"\r\n              onClick={this.props.onActionTriggered}\r\n            >\r\n              {this.props.actionLabel}\r\n            </button>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"loader-wrapper\">\r\n        <div className=\"loader\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleFileChange = async e => {\r\n    const uploadedFiles = e.target.files;\r\n\r\n    this.props.preProcess();\r\n    this.toggleLoading();\r\n    this.readMultipleFiles(uploadedFiles);\r\n\r\n    uploadedFiles.length > 1 ? this.setFileName('Multiple CSV Files') : this.setFileName(uploadedFiles[0].name)\r\n  }\r\n\r\n  async readMultipleFiles(files) {\r\n    let tempFiles = [];\r\n    const self = this;\r\n\r\n    async function readFile(index) {\r\n      if (index >= files.length) return;\r\n\r\n      let fileReader = new FileReader();\r\n      const file = files[index];\r\n      fileReader.onload = function (e) {\r\n        const bin = e.target.result;\r\n        let cache = convertCsvToJson(bin, file.name.split('.')[0]);\r\n        cache.then((val) => {\r\n          tempFiles = [\r\n            ...tempFiles,\r\n            ...val,\r\n          ];\r\n\r\n          if (index >= files.length) {\r\n            self.props.onFileChange(tempFiles);\r\n            self.toggleLoading();\r\n          }\r\n        });\r\n        readFile(index += 1);\r\n      }\r\n      fileReader.readAsText(file)\r\n    }\r\n\r\n    async function convertCsvToJson(csv, name) {\r\n      const lines = csv.split('\\n');\r\n      const result = [];\r\n      const headers = ['trade_date', 'open', 'high', 'low', 'close', 'volume'];\r\n\r\n      lines.map(l => {\r\n        const obj = {};\r\n        const line = l.split(',');\r\n\r\n        obj['code'] = name;\r\n        headers.map((h, i) => {\r\n          obj[h] = line[i];\r\n        });\r\n\r\n        if (obj.code !== '' && obj.trade_date !== '') {\r\n          result.push(obj);\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n\r\n    readFile(0);\r\n  }\r\n\r\n  toggleLoading = () => {\r\n    this.setState({ loading: !this.state.loading });\r\n  }\r\n\r\n\r\n  openInputFile() {\r\n    this.inputFileRef.current.click();\r\n  }\r\n\r\n  setFileName(fileName) {\r\n    this.setState({ fileName: fileName });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport TraderUploader from '../../library/trader-uploader/trader-uploader.component';\nimport Button from 'react-bootstrap/Button';\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/monikai.css';\nimport axios from \"axios\";\n\nexport default class StrategyAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      strategyName: undefined,\n      buyStrategy: undefined,\n      sellStrategy: undefined,\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"strategyAdd\">\n        <section id=\"uploadForm\">\n          {this.renderFileNameInput()}\n          {this.renderBuySection()}\n          {this.renderSellSection()}\n        </section>\n        <section id=\"strategyContent\">\n          {this.renderActionSection()}\n          {this.renderBuyContent()}\n          {this.renderSellContent()}\n        </section>\n      </div>\n    );\n  }\n\n  renderFileNameInput() {\n    return (\n      <section className=\"card upload-card\">\n        <h5>Strategy name</h5>\n        <input type=\"text\" id=\"strategyName\" onChange={this.setFileName}></input>\n      </section>\n    );\n  }\n\n  /**\n   * Render buy section.\n   */\n  renderBuySection() {\n    return (\n      <section className=\"card upload-card\">\n        <h5>Buy</h5>\n        <TraderUploader\n          onFileChange={this.onBuyFileChange}\n          label=\"Choose buy strategy file\"\n          parseType=\"json\"\n        />\n      </section>\n    )\n  }\n\n  /**\n   * Render sell section.\n   */\n  renderSellSection() {\n    return (\n      <section className=\"card upload-card\">\n        <h5>Sell</h5>\n        <TraderUploader\n          onFileChange={this.onSellFileChange}\n          label=\"Choose sell strategy file\"\n          parseType=\"json\"\n        />\n      </section>\n    )\n  }\n\n  setFileName = e => {\n    this.setState({\n      strategyName: e.target.value\n    });\n  }\n\n  onBuyFileChange = (content) => {\n    this.setState({\n      buyStrategy: content,\n    });\n  }\n\n  onSellFileChange = (content) => {\n    this.setState({\n      sellStrategy: content,\n    });\n  }\n\n  renderActionSection() {\n    return (\n      <section id=\"action\">\n        <Button className=\"form-btn\" onClick={this.saveStrategy}>Save</Button>\n        <Button className=\"form-btn\">Reset</Button>\n      </section>\n    )\n  }\n\n  renderBuyContent() {\n    return (\n      this.state.buyStrategy &&\n      (\n        <div>\n          <h5>Buy Strategy</h5>\n          <section className=\"card\">\n            <JSONPretty data={this.state.buyStrategy} />\n          </section>\n        </div>\n      )\n    );\n  }\n\n  renderSellContent() {\n    return (\n      this.state.sellStrategy &&\n      (\n        <div>\n          <h5>Sell Strategy</h5>\n          <section className=\"card\">\n            <JSONPretty data={this.state.sellStrategy} />\n          </section>\n        </div>\n      )\n\n    );\n  }\n\n  saveStrategy = () => {\n    const strategy = {\n      strategy_name: this.state.strategyName,\n      strategy_buy: this.state.buyStrategy,\n      strategy_sell: this.state.sellStrategy,\n    };\n\n    axios\n      .post(\"http://localhost:4000/strategy/add\", strategy)\n      .then(() => {\n        console.log('Upload successful!')\n      })\n      .catch(() => console.log('Upload failed!'));\n  }\n}","import React from \"react\";\r\n\r\nconst Breadcrumb = (props) => {\r\n  let children = React.Children.toArray(props.children);\r\n\r\n  children = children.map((child, index) => (\r\n    <BreadcrumbItem key={`breadcrumb_item${index}`}>{child}</BreadcrumbItem>\r\n  ))\r\n\r\n  return <ol className='breadcrumb'>{children}</ol>\r\n}\r\n\r\nconst BreadcrumbItem = ({ children, ...props }) => (\r\n  <li className='breadcrumb-item' {...props}>\r\n    {children}\r\n  </li>\r\n)\r\n\r\nexport default Breadcrumb","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Link } from \"react-router-dom\";\nimport StrategyList from './strategy-list.component';\nimport StrategyAdd from './strategy-add.component';\nimport Breadcrumb from '../breadcrumbs.component';\n\nconst items = [\n  { to: '/strategy/list', label: 'Strategy List' },\n  { to: '/strategy/add', label: 'Add Strategy' },\n]\n\nexport default class Strategy extends Component {\n  render() {\n    return (\n      <Router>\n        {this.renderRouteArea()}\n      </Router>\n    );\n  }\n\n  renderRouteArea() {\n    return (\n      <div id=\"strategy\">\n        <div className=\"header\">\n          <p>STRATEGY</p>\n        </div>\n        <Breadcrumb>\n          {items.map(({ to, label }) => (\n            <Link key={to} to={to}>\n              {label}\n            </Link>\n          ))}\n        </Breadcrumb>\n        <Route path=\"/strategy\"><Redirect to=\"/strategy/list\"/></Route>\n        <Route path=\"/strategy/list\" exact component={StrategyList} />\n        <Route path=\"/strategy/add\" exact render={props => <StrategyAdd callMe={this.sampleMethod} />} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport './style.css'\n\nexport default class TraderDatePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      datePickerOpen: false,\n      selectedDay: undefined,\n    };\n  }\n\n  render() {\n    return (\n      <div id=\"trader-datepicker\">\n        <span>{this.props.label}</span>\n        <div id=\"trader-datepicker-wrapper\">\n          <DayPickerInput\n            onDayChange={this.props.onDayChange}\n            dayPickerProps={{\n              showWeekNumbers: true,\n              todayButton: 'Today',\n            }}\n          />\n          <i className=\"fa fa-calendar fa-fw\"></i>\n        </div>\n      </div>\n    );\n  }\n}","// React\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Button from \"react-bootstrap/Button\";\r\nimport TraderDatepicker from '../../library/trader-datepicker/trader-datepicker.component'\r\nimport WindowedSelect from \"react-windowed-select\";\r\n\r\n// Constant\r\nimport { baseAPI } from \"../../constant\"\r\n\r\n// Styles \r\nimport './style.css'\r\n\r\n// Packages\r\nimport moment from 'moment';\r\n\r\n/**\r\n * @class StockList \r\n * @extends Component\r\n */\r\nexport default class StocksList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleStockChange = this.handleStockChange.bind(this);\r\n    this.state = {\r\n      fromDay: undefined,\r\n      toDay: undefined,\r\n      error: \"\",\r\n      selectedStock: undefined,\r\n      stocks: [],\r\n      stockList: [],\r\n      uploadSuccessful: false,\r\n      uploadFailed: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveStocks();\r\n  }\r\n\r\n  retrieveStocks() {\r\n    axios\r\n      .post(`${baseAPI}stocks/distinct/`)\r\n      .then(response => this.setState({\r\n        stockList: response.data.map((value) => {\r\n          return {\r\n            label: value,\r\n            value,\r\n          };\r\n        })\r\n      }))\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <p>STOCKS</p>\r\n        </div>\r\n        <div className=\"stockSearch\">\r\n          <div id=\"uploadBtn\">\r\n            <Link to=\"/stocks/upload\" className=\"nav-normal\">\r\n              <i className=\"fa fa-cloud\" aria-hidden=\"true\"></i>\r\n              <span>Upload</span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"testRunnerFields\">\r\n              {this._renderSelectStock()}\r\n              {this._renderFromDatePicker()}\r\n              {this._renderToDatePicker()}\r\n              <Button id=\"slSearchBtn\" onClick={() => this.searchStocks()}>Search</Button>\r\n              <Button id=\"slResetBtn\">Reset</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.stocks.length !== 0 && (\r\n          <div className=\"table-responsive stock-list\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Stock Code</th>\r\n                  <th>Date</th>\r\n                  <th>Open</th>\r\n                  <th>High</th>\r\n                  <th>Low</th>\r\n                  <th>Close</th>\r\n                  <th>Volume</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.mapStockList()}</tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  searchStocks = () => {\r\n    if (this.state.selectedStock) {\r\n      const { value: code } = this.state.selectedStock;\r\n\r\n      this.setState({ stocks: [] }, () => {\r\n        axios\r\n          .post(\"http://localhost:4000/stocks/range\", {\r\n            dateFrom: this.state.fromDay,\r\n            dateTo: this.state.toDay,\r\n            code\r\n          })\r\n          .then((response) => {\r\n            this.setState({ stocks: response.data });\r\n\r\n            this.mapStockList();\r\n          })\r\n          .catch(() => this.setState({ uploadFailed: true }));\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  onFileChangeHandler = (content) => {\r\n    this.setState({ stockList: content });\r\n  };\r\n\r\n  onSaveHandler = () => {\r\n    axios\r\n      .post(\"http://localhost:4000/stocks/add\", this.state.stockList)\r\n      .then(() => {\r\n        this.setState({ uploadSuccessful: true, stocks: [] });\r\n\r\n        this.mapStockList();\r\n      })\r\n      .catch(() => this.setState({ uploadFailed: true }));\r\n  };\r\n\r\n  mapStockList() {\r\n    return this.state.stocks.map((currentStock, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td> {currentStock.code} </td>\r\n          <td> {moment(currentStock.trade_date).format('MMM DD, YYYY')} </td>\r\n          <td> {currentStock.open} </td>\r\n          <td> {currentStock.high} </td>\r\n          <td> {currentStock.low} </td>\r\n          <td> {currentStock.close} </td>\r\n          <td> {currentStock.volume} </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  _renderSelectStock() {\r\n    const { selectedStock } = this.state;\r\n\r\n    return (\r\n      <div id=\"tsStockDd\">\r\n        <span>Stock</span>\r\n        <div className=\"dropdown\">\r\n          <WindowedSelect\r\n            onChange={this.handleStockChange}\r\n            options={this.state.stockList}\r\n            value={selectedStock}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleStockChange(selectedOption) {\r\n    this.setState({ selectedStock: selectedOption })\r\n  }\r\n\r\n  _renderFromDatePicker() {\r\n    return (\r\n      <TraderDatepicker label=\"Date From\" onDayChange={this.handleFromDayChange} />\r\n    );\r\n  }\r\n\r\n  handleFromDayChange = (day) => {\r\n    if (day) {\r\n      console.log('fromday', new Date(day).toISOString())\r\n      this.setState({ fromDay: day });\r\n    }\r\n  }\r\n\r\n  _renderToDatePicker() {\r\n    return (\r\n      <TraderDatepicker label=\"Date To\" onDayChange={this.handleToDayChange} />\r\n    );\r\n  }\r\n\r\n  handleToDayChange = (day) => {\r\n    this.setState({ toDay: day });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TraderUploader from '../../library/trader-uploader/trader-uploader.component';\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nconst LABELS = Object.freeze({\n  RESET: 'RESET',\n  STOCKS: 'STOCKS',\n  TOTAL_COUNT: 'TOTAL COUNT',\n  UPLOAD: 'Upload',\n  UPLOAD_STOCKS: 'UPLOAD STOCKS',\n});\n\nexport default class StocksUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stocks: [],\n      saving: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <Link to=\"/stocks/list\" className=\"nav-normal\">\n            <i className=\"fa fa-chevron-circle-left\" aria-hidden=\"true\"></i>\n            <span> {LABELS.STOCKS}</span>\n          </Link>\n          <p>{LABELS.UPLOAD_STOCKS}</p>\n        </div>\n        <div className=\"card\">\n          <div className=\"upload-controls\">\n            <div className=\"stocks-list-uploader\">\n              <TraderUploader\n                label=\"Choose a file\"\n                preProcess={this.clearStockList}\n                onFileChange={this.onFileChangeHandler}\n                parseType=\"csv\"\n              />\n            </div>\n            <Button id=\"slSearchBtn\" onClick={() => this.onSaveHandler()}>\n              {this.state.saving\n                ? this.renderLoadingButton()\n                : LABELS.UPLOAD\n              }</Button>\n            <Button id=\"slResetBtn\">Reset</Button>\n          </div>\n        </div>\n        <div>\n          {this.state.stocks.length !== 0 && (\n            <div className=\"table-responsive stock-list\">\n              {LABELS.TOTAL_COUNT} {this.state.stocks.length}\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th>Stock Code</th>\n                    <th>Date</th>\n                    <th>Open</th>\n                    <th>High</th>\n                    <th>Low</th>\n                    <th>Close</th>\n                    <th>Volume</th>\n                  </tr>\n                </thead>\n                <tbody>{this.mapStockList()}</tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  clearStockList = () => {\n    this.setState({ stocks: [] });\n  }\n\n  renderLoadingButton() {\n    return (\n      <span className=\"buttonLabel\">\n        Loading\n        <div className=\"loader-wrapper\">\n          <div className=\"loader\"></div>\n        </div>\n      </span>\n    )\n  }\n\n  onSaveHandler = () => {\n    this.toggleSavingState();\n    axios\n      .post(\"http://localhost:4000/stocks/add\", this.state.stocks)\n      .then(() => {\n        this.setState({ uploadSuccessful: true, stocks: [] });\n\n        this.mapStockList();\n      })\n      .catch(() => this.setState({ uploadFailed: true }))\n      .finally(() => this.toggleSavingState());\n  };\n\n  onFileChangeHandler = (content) => {\n    this.setState({ stocks: [] }, () => {\n      this.setState({\n        stocks: content.map(item => {\n          return {\n            ...item,\n            volume: parseFloat(item.volume),\n          }\n        })\n      });\n    });\n  };\n\n  toggleSavingState = () => {\n    this.setState({ saving: !this.state.saving });\n  }\n\n  mapStockList() {\n    return this.state.stocks.map((currentStock, i) => {\n      return (\n        <tr key={i}>\n          <td> {currentStock.code} </td>\n          <td> {currentStock.trade_date} </td>\n          <td> {currentStock.open} </td>\n          <td> {currentStock.high} </td>\n          <td> {currentStock.low} </td>\n          <td> {currentStock.close} </td>\n          <td> {currentStock.volume} </td>\n        </tr>\n      );\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect  } from \"react-router-dom\";\nimport StocksList from './stockslist.component'\nimport StocksUpload from './stocksupload.component'\n\nexport default class Stocks extends Component {\n  render() {\n    return (\n      <Router>\n        {this.renderRouteArea()}\n      </Router>\n    );\n  }\n\n  renderRouteArea() {\n    return (\n      <div id=\"stocks\">\n        <Route path=\"/stocks\"><Redirect to=\"/stocks/list\" /></Route>\n        <Route path=\"/stocks/list\" exact component={StocksList} />\n        <Route path=\"/stocks/upload\" exact component={StocksUpload} />\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseAPI } from \"../constant\";\r\nimport 'react-day-picker/lib/style.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../style/backtest.style.css'\r\n\r\nexport default class Backtest extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._processBacktest = this._processBacktest.bind(this);\r\n    this.state = {\r\n      selectedStrategy: undefined,\r\n      selectedStocks: undefined,\r\n      strategies: [],\r\n      result: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveStrategyList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"backtest\">\r\n        <div className=\"header\">\r\n          <p>BACKTESTS</p>\r\n        </div>\r\n        <div id=\"backtestForm\" className=\"card\">\r\n          {this._renderSelectStock()}\r\n          {this._renderSelectStrategy()}\r\n          {this._renderSearchButton()}\r\n          {this._renderResetButton()}\r\n        </div>\r\n        {this._renderResultsTable()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  mapResultList() {\r\n    return this.state.result.map((res, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td> {res.code} </td>\r\n          <td> {res.bought_date} </td>\r\n          <td> {res.bought_price} </td>\r\n          <td> {res.sold_date} </td>\r\n          <td> {res.sold_price} </td>\r\n          <td> {res.units} </td>\r\n          <td> {res.pnl} </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  retrieveStrategyList() {\r\n    axios\r\n      .get(`${baseAPI}strategy/`)\r\n      .then(response => this.setState({ strategies: response.data }))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  _renderSelectStrategy() {\r\n    return (\r\n      <div id=\"btStratDd\">\r\n        <span>Strategy</span>\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"strategyDropDown\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\">\r\n            {this.state.selectedStrategy ? this.state.selectedStrategy.strategy_name : \"ALL\"}\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"strategyDropDown\">\r\n            {this.state.strategies.map((strat, i) => {\r\n              return (<a key={i} className=\"dropdown-item\" href=\"#!\" onClick={() => this._setSelectedStrategy(strat)}>{strat.strategy_name}</a>);\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderSelectStock() {\r\n    return (\r\n      <div id=\"btStockDd\">\r\n        <span>Stock</span>\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"stockDropDown\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\">\r\n            {this.state.selectedStrategy ? this.state.selectedStrategy.strategy_name : \"ALL\"}\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"strategyDropDown\">\r\n            {this.state.strategies.map((strat, i) => {\r\n              return (<a key={i} className=\"dropdown-item\" href=\"#!\" onClick={() => this._setSelectedStrategy(strat)}>{strat.strategy_name}</a>);\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderResultsTable() {\r\n    return (\r\n      this.state.result.length === 0 ?\r\n        (<h5>No Result</h5>)\r\n        :\r\n        (\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Code</th>\r\n                <th>Bought Date</th>\r\n                <th>Bought Price</th>\r\n                <th>Sold Date</th>\r\n                <th>Sold Price</th>\r\n                <th>Units</th>\r\n                <th>P/&L</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.mapResultList()}</tbody>\r\n          </table>\r\n        )\r\n    );\r\n  }\r\n\r\n  _renderSearchButton() {\r\n    return (\r\n      <Button id=\"btSearchBtn\">Search</Button>\r\n    )\r\n  }\r\n\r\n  _renderResetButton() {\r\n    return (\r\n      <Button id=\"btResetBtn\">Reset</Button>\r\n    )\r\n  }\r\n\r\n  _processBacktest = () => {\r\n    axios\r\n      .post(`${baseAPI}stocks/range/`, {\r\n        dateFrom: this.state.selectedFromDay,\r\n        dateTo: this.state.selectedToDay,\r\n      })\r\n      .then(response => {\r\n        if (!response.data) return;\r\n\r\n        console.log(response.data.length)\r\n        this._runBacktest(response.data);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  /**\r\n   * Perform backtest sequence.\r\n   * @param {Array} stockList List of stock to be tested\r\n   */\r\n  _runBacktest(stockList) {\r\n    const buyStrategy = this.state.selectedStrategy.strategy_buy;\r\n    const sellStrategy = this.state.selectedStrategy.strategy_sell;\r\n    const dateRange = {\r\n      from: this.state.dateFrom,\r\n      to: this.state.dateTo,\r\n    }\r\n\r\n    axios.post(`${baseAPI}back_test/test/`, {\r\n      stockList,\r\n      buyStrategy,\r\n      sellStrategy,\r\n      dateRange,\r\n    })\r\n      .then(response => {\r\n        if (!response.data) return;\r\n\r\n        this.setState({ result: response.data });\r\n        this._saveTransactionHistory(response.data);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  /**\r\n   * Save transaction history to database\r\n   * @param {Array} transactionList Transaction history\r\n   */\r\n  _saveTransactionHistory(transactionList) {\r\n    axios.post(`${baseAPI}transaction_history/add`, {\r\n      transactionList,\r\n    })\r\n      .then(response => console.log(response.data))\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  _setSelectedStrategy = (strat) => {\r\n    this.setState({\r\n      selectedStrategy: strat,\r\n    });\r\n  }\r\n}","import React, { Component } from \"react\";\nimport './style.css'\n\nexport default class TraderTextField extends Component {\n  render() {\n    return (\n      <div id=\"trader-textfield\">\n        <span>{this.props.label}</span>\n        <input type=\"text\" onChange={this.props.onChange}></input>\n      </div>\n    );\n  }\n}","// React \nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\n// Elements\nimport Button from \"react-bootstrap/Button\";\nimport TraderDatepicker from '../../library/trader-datepicker/trader-datepicker.component';\nimport TraderTextField from '../../library/trader-textfield/trader-textfield.component';\nimport WindowedSelect from \"react-windowed-select\";\n\n// Styles\nimport './style.css';\n\n// Constant\nimport { baseAPI } from \"../../constant\"\n\n// Packages\nimport moment from \"moment\";\n\n/**\n * @class TestRunner\n * @extends Component\n */\nexport default class TestRunner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stopLossChange = this.stopLossChange.bind(this);\n    this.handleStockChange = this.handleStockChange.bind(this);\n    this.handleStrategyChange = this.handleStrategyChange.bind(this);\n    \n    this.state = {\n      fromDay: undefined,\n      result: [],\n      selectedStock: undefined,\n      stockList: [],\n      strategies: [],\n      stopLoss: 100,\n      toDay: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveStrategyList();\n    this.retrieveStockList();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <p>LABORATORY</p>\n        </div>\n        <div id=\"tsBody\">\n          {this._renderTestPanel()}\n          {this._renderResultPanel()}\n        </div>\n      </div>\n    );\n  }\n\n  _renderTestPanel() {\n    return (\n      <div id=\"testPanel\">\n        <div className=\"testRunnerControls\">\n          <div className=\"card\">\n            <div className=\"testRunnerFields\">\n              {this._renderFromDatePicker()}\n              {this._renderToDatePicker()}\n              {this._renderSelectStock()}\n              {this._renderSelectStrategy()}\n              {this._renderStopLoss()}\n            </div>\n          </div>\n          <div className=\"testRunnerActions\">\n            <Button id=\"trSearchBtn\" onClick={() => this._processBacktest()}>Start</Button>\n            <Button id=\"trResetBtn\">Reset</Button>\n          </div>\n        </div>\n        <div id=\"tsResults\">\n          {this._renderResultsTable()}\n        </div>\n        {\n          this.state.result.length !== 0 &&\n          (<div id=\"tsFooter\">\n            {this._renderPagination()}\n            {this._renderTestActions()}\n          </div>)\n        }\n      </div>\n    );\n  }\n\n  _renderResultPanel() {\n    return (\n      <div>\n        TEST RESULTS\n      </div>\n    )\n  }\n\n  _renderSelectStock() {\n    const { selectedStock } = this.state;\n\n    return (\n      <div id=\"tsStockDd\">\n        <span>Stock</span>\n        <div className=\"dropdown\">\n          <WindowedSelect\n            onChange={this.handleStockChange}\n            options={this.state.stockList}\n            value={selectedStock}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleStockChange(selectedOption) {\n    this.setState({ selectedStock: selectedOption })\n  }\n\n  handleStrategyChange(selectedOption) {\n    this.setState({ selectedStrategy: selectedOption })\n  }\n\n  _renderSelectStrategy() {\n    const { selectedStrategy } = this.state;\n\n    return (\n      <div id=\"tsStratDd\">\n        <span>Strategy</span>\n        <div className=\"dropdown\">\n          <WindowedSelect\n            onChange={this.handleStrategyChange}\n            options={this.state.strategies}\n            value={selectedStrategy}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  _renderFromDatePicker() {\n    return (\n      <TraderDatepicker label=\"From\" onDayChange={this.handleFromDayChange} />\n    );\n  }\n\n  handleFromDayChange = (day) => {\n    this.setState({ fromDay: day });\n  }\n\n  _renderToDatePicker() {\n    return (\n      <TraderDatepicker label=\"To\" onDayChange={this.handleToDayChange} />\n    );\n  }\n\n  handleToDayChange = (day) => {\n    this.setState({ toDay: day });\n  }\n\n  _renderStopLoss() {\n    return (\n      <TraderTextField label=\"Stoploss\" onChange={this.stopLossChange} />\n    )\n  }\n\n  /**\n   * Set stoploss value.\n   * @param {Object} event Event\n   */\n  stopLossChange(event) {\n    this.setState({ stopLoss: event.target.value });\n  }\n\n  retrieveStrategyList() {\n    axios\n      .get(`${baseAPI}strategy/`)\n      .then(response => this.setState({\n        strategies: response.data.map((value) => {\n          return {\n            label: value.strategy_name,\n            value: value,\n          };\n        })\n      }))\n      .catch(error => console.log(error));\n  }\n\n  /**\n   * Retrieve and map distinct stock code.\n   */\n  retrieveStockList() {\n    axios\n      .post(`${baseAPI}stocks/distinct/`)\n      .then(response => this.setState({\n        stockList: response.data.map((value) => {\n          return {\n            label: value,\n            value,\n          };\n        })\n      }))\n      .catch(error => console.log(error));\n  }\n\n  _processBacktest = () => {\n    const { selectedStock: { value: code } } = this.state;\n\n    axios\n      .post(`${baseAPI}stocks/range/`, {\n        dateFrom: this.state.fromDay,\n        dateTo: this.state.toDay,\n        code,\n      })\n      .then(response => {\n        if (response.data.length === 0) return;\n\n        this._runBacktest(response.data);\n      })\n      .catch(error => console.error(error));\n  }\n\n  /**\n   * Perform backtest sequence.\n   * @param {Array} stockList List of stock to be tested\n   */\n  _runBacktest(stockList) {\n    const { selectedStrategy: { value: { strategy_buy: buyStrategy } } } = this.state;\n    const { selectedStrategy: { value: { strategy_sell: sellStrategy } } } = this.state;\n    const { stopLoss } = this.state;\n\n    axios.post(`${baseAPI}back_test/test/`, {\n      stockList,\n      buyStrategy,\n      sellStrategy,\n      stopLoss,\n    })\n      .then(response => {\n        if (!response.data) return;\n\n        this.setState({ result: response.data });\n        this._saveTransactionHistory(response.data);\n      })\n      .catch(error => console.error(error));\n  }\n\n  /**\n   * Save transaction history to database\n   * @param {Array} transactionList Transaction history\n   */\n  _saveTransactionHistory(transactionList) {\n    axios.post(`${baseAPI}transaction_history/add`, {\n      transactionList,\n    })\n      .then(response => console.log(response.data))\n      .catch(error => console.error(error));\n  }\n\n  _renderResultsTable() {\n    return (\n      this.state.result.length !== 0 &&\n      (\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Stock Code</th>\n                <th>Bought Date</th>\n                <th>Bought Price</th>\n                <th>Sold Date</th>\n                <th>Sold Price</th>\n                <th>Units</th>\n                <th>P/&L</th>\n                <th>Hold Days</th>\n              </tr>\n            </thead>\n            <tbody>{this.mapResultList()}</tbody>\n          </table>\n        </div>\n      )\n    );\n  }\n\n  mapResultList() {\n    const start = 0;\n    const end = 999;\n    let count = 0;\n    return this.state.result.map((res, i) => {\n      count += 1;\n      while (count >= start && count <= end) {\n        const bought_date = moment(moment(res.bought_date).format('MMM DD, YYYY'));\n        const sold_date = moment(moment(res.sold_date).format('MMM DD, YYYY'));\n\n        return (\n          <tr key={i}>\n            <td> {res.code} </td>\n            <td> {bought_date._i} </td>\n            <td> {res.bought_price} </td>\n            <td> {sold_date._i} </td>\n            <td> {res.sold_price} </td>\n            <td> {res.units} </td>\n            <td> {res.pnl && res.pnl.toFixed(2)} </td>\n            <td> {sold_date.diff(bought_date, \"days\")} </td>\n          </tr>\n        );\n      }\n    });\n  }\n\n  _renderPagination() {\n    return (\n      <ul className=\"pagination\">\n        <li className=\"page-item\"><a href=\"#\" className=\"page-link\">1</a></li>\n        <li className=\"page-item\"><a href=\"#\" className=\"page-link\">2</a></li>\n        <li className=\"page-item\"><a href=\"#\" className=\"page-link\">3</a></li>\n        <li className=\"page-item\"><a href=\"#\" className=\"page-link\">4</a></li>\n        <li className=\"page-item\"><a href=\"#\" className=\"page-link\">5</a></li>\n      </ul>\n    )\n  }\n\n  _renderTestActions() {\n    return (\n      <div>\n        <Button id=\"tsSave\">Save</Button>\n      </div>\n    )\n  }\n}\n\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Dashboard from \"./components/dashboard.component\";\r\nimport Strategy from \"./components/strategy/strategy.component\";\r\nimport Stocks from \"./components/stocklist/stocks.component\";\r\nimport Backtest from \"./components/backtest.component\";\r\nimport TestRunner from \"./components/runner/test-runner.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"body-container\">\r\n          {this.renderSideNavigation()}\r\n          {this.renderContentArea()}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  renderTopHeader() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark\" id=\"topbar\">\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n  renderSideNavigation() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar\" id=\"topbar left\">\r\n        </nav>\r\n        <nav id=\"sidebar\">\r\n          <div id=\"user\">\r\n            <img src={require(\"./avatar.png\")} alt=\"Avatar\" />\r\n            <span>Carlo</span>\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/runner\" className=\"nav-link star\" id=\"newBacktest\" onClick={this.resetActiveElements}>\r\n                <span className=\"title\">New Backtest</span>\r\n                <i className=\"fas fa-plus fa-fw\"></i>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\" className=\"nav-link\" id=\"dashBoard\" onClick={this.setToActive}>\r\n                <i className=\"fas fa-chart-pie fa-fw\"></i>\r\n                <span className=\"title\">Dashboard</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/stocks\" className=\"nav-link\" id=\"stockList\" onClick={this.setToActive}>\r\n                <i className=\"fas fa-chart-line fa-fw\"></i>\r\n                <span className=\"title\">Stocks</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/strategy\" className=\"nav-link\" id=\"strategy\" onClick={this.setToActive}>\r\n                <i className=\"fas fa-lightbulb fa-fw\"></i>\r\n                <span className=\"title\">Strategy</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/backtest\" className=\"nav-link\" id=\"backTest\" onClick={this.setToActive}>\r\n                <i className=\"fas fa-vials fa-fw\"></i>\r\n                <span className=\"title\">Backtests</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setToActive(event) {\r\n    const activeElements = document.getElementsByClassName('active');\r\n    \r\n    if (activeElements.length >= 1) {\r\n      document.getElementsByClassName('active')[0].classList.remove('active');\r\n    }\r\n    event.currentTarget.classList.add('active');\r\n  }\r\n\r\n  resetActiveElements() {\r\n    const activeElements = document.getElementsByClassName('active');\r\n\r\n    if (activeElements.length > 0) {\r\n      document.getElementsByClassName('active')[0].classList.remove('active');\r\n    }\r\n  }\r\n\r\n  renderContentArea() {\r\n    return (\r\n      <div id=\"content\">\r\n        {this.renderTopHeader()}\r\n        <div id=\"body\" className=\"container-fluid\">\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"/strategy\" exact component={Strategy} />\r\n          <Route path=\"/stocks\" exact component={Stocks} />\r\n          <Route path=\"/backtest\" exact component={Backtest} />\r\n          <Route path=\"/runner\" exact component={TestRunner} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}